// first step of tesselation shader
// tesselation control shader add/deletes control points and determines the tesselatation level
// patch has three control points here (three vertices for each triangle)


#version 450 core
layout (vertices =3) out;

//vectors stored as arrays - each patch has three vertices, each with an xyz pos and xyz norm value 
//posVS = position from Vertex Shader, posTC = position from this Tesselation Control shader

uniform vec3 eyePos;

in vec3 FragPos[] ;
in vec2 TexCoords[];
//in vec4 FragPosLightSpace[];

out vec3 posTC[] ;
out vec2 TCSTexCoords[];
//out vec4 FragPosLightSpaceTCS[];

// set tessalation level
float GetTessLevel(float dist1, float dist2)
{
	float avgDist = (dist1 + dist2)/2;

	if(avgDist < 40.0f){return 20.0f;}
	else if(avgDist < 60.0f) {return 18.0f;}
	else if(avgDist < 80.0f) {return 16.0f;}
	else if(avgDist < 100.0f) {return 14.0f;}
	else if(avgDist < 120.0f) {return 12.0f;}
	else if(avgDist < 140.0f) {return 8.0f;}
	else if(avgDist < 200.0f) {return 4.0f;}
	else {return 4.0f;}

	//use avgDist to find tessellation level
}

void main()
{

  // tesselation level; we wil find this automatically later but for now hardcoded value
   int tessLevel = 2;
   float eyeToVertexDist0 = distance(eyePos, FragPos[0]);
   float eyeToVertexDist1 = distance(eyePos, FragPos[1]);
   float eyeToVertexDist2 = distance(eyePos, FragPos[2]);

   // gpu can calculate each control point in parallel
   // tesselation level same for entire patch so only need to set it once (for the first control point)
   // gl_invocation called for each control point
   if (gl_InvocationID==0)
   {
		gl_TessLevelOuter[0] = GetTessLevel(eyeToVertexDist1, eyeToVertexDist2);
		gl_TessLevelOuter[1] = GetTessLevel(eyeToVertexDist2, eyeToVertexDist0);
		gl_TessLevelOuter[2] = GetTessLevel(eyeToVertexDist0, eyeToVertexDist1);
		gl_TessLevelInner[0] = gl_TessLevelOuter[2];

   }

   // pass through position and normal information
   posTC[gl_InvocationID]  = FragPos[gl_InvocationID] ;
   TCSTexCoords[gl_InvocationID] = TexCoords[gl_InvocationID] ;
   //FragPosLightSpaceTCS[gl_InvocationID] =  FragPosLightSpace[gl_InvocationID];
}

